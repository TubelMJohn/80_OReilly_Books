<html>
<head>
<title>Index: L</title>
</head>
<body bgcolor="#FFFFFF" text="#000000">

<!-- START OF BODY -->

<!-- TOP BANNER -->

<p>
<img 
  src="../gifs/smbanns.gif" 
  usemap="#banner-map"
  border=0 
  alt="Book Home" 
></a>
</p>
<map name="banner-map">
<area alt="ActionScript: The Definitive Guide" href="../index.htm" coords="1,-2,616,66" shape="rect" /><area alt="Search this book" href="../jobjects/fsearch.htm" coords="629,-11,726,25" shape="rect" /></map>
</map>

<!-- TOP INDEX LINKS -->

<p>
<font size="-1">
<a href="idx_0.htm">Symbols</a>
| <a href="idx_a.htm">A</a>
| <a href="idx_b.htm">B</a>
| <a href="idx_c.htm">C</a>
| <a href="idx_d.htm">D</a>
| <a href="idx_e.htm">E</a>
| <a href="idx_f.htm">F</a>
| <a href="idx_g.htm">G</a>
| <a href="idx_h.htm">H</a>
| <a href="idx_i.htm">I</a>
| <a href="idx_j.htm">J</a>
| <a href="idx_k.htm">K</a>
| <a href="idx_l.htm">L</a>
| <a href="idx_m.htm">M</a>
| <a href="idx_n.htm">N</a>
| <a href="idx_o.htm">O</a>
| <a href="idx_p.htm">P</a>
| <a href="idx_q.htm">Q</a>
| <a href="idx_r.htm">R</a>
| <a href="idx_s.htm">S</a>
| <a href="idx_t.htm">T</a>
| <a href="idx_u.htm">U</a>
| <a href="idx_v.htm">V</a>
| <a href="idx_w.htm">W</a>
| <a href="idx_x.htm">X</a>
| <a href="idx_y.htm">Y</a>
| <a href="idx_z.htm">Z</a>
</FONT>

<!-- INDEX SECTION BODY -->

<H1>Index: L</H1>

<DL>

<!-- ========================== -->


<a name="labels-frame">
<dt>labels, frame (see <a href="idx_f.htm#frames-frame-labels">frames, frame labels</a>)
</dt>


<!-- ========================== -->


<a name="language-reference-ActionScript">
<dt>language reference, ActionScript: <a href="../ch20_01.htm#INDEX-2324">20. ActionScript Language Reference</a></dt>


<!-- ========================== -->


<a name="last-in-first-out-LIFO-stacks">
<dt>last-in-first-out (LIFO) stacks: <a href="../ch11_07.htm#INDEX-1381">11.7.3.1. The push( ) method</a></dt>


<!-- ========================== -->


<a name="lastChild-property-XML-class">
<dt>lastChild property (XML class): <a href="../ch20_05.htm#INDEX-2669">20.5. Alphabetical Language Reference</a></dt><dd><dl>
  <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
</dl></dd>


<!-- ========================== -->


<a name="lastIndexOf-String-class">
<dt>lastIndexOf() (String class): <a href="../ch04_06.htm#INDEX-528">4.6.5.4. The lastIndexOf( ) Function</a></dt><dd><dl>
  <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
</dl></dd>


<!-- ========================== -->


<a name="Latin-1-characters">
<dt>Latin 1 characters: <a href="../ch04_05.htm#INDEX-449">4.5.1. Character Encoding</a></dt><dd><dl>
  
  <a name="code-points-for">
  <dt>code points for: <a href="../ch04_05.htm#INDEX-475">4.5.2.3. Unicode-style escape sequences</a></dt><dd><dl>
    <dt><a href="../appb_01.htm#INDEX-2822">B. Latin 1 Character Repertoire and Keycodes</a></dt>
    
    <a name="retrieving">
    <dt>retrieving: <a href="../ch04_06.htm#INDEX-579">4.6.9.2. The charCodeAt( ) function</a></dt><dd><dl>
      <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
    </dl></dd>
    
    
    <a name="sorting-arrays">
    <dt>sorting arrays: <a href="../ch11_09.htm#INDEX-1421">11.9.2. The sort( ) Method</a></dt>
    
  </dl></dd>
  
  
  <a name="creating-strings-from-code-points">
  <dt>creating strings from code points: <a href="../ch04_06.htm#INDEX-575">4.6.9.1. The fromCharCode( ) function</a></dt>
  
  
  <a name="generating-strings-from-code-points">
  <dt>generating strings from code points: <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
  
  
  <a name="hexadecimal-escape-sequences-and">
  <dt>hexadecimal escape sequences and: <a href="../ch20_05.htm#INDEX-2384">20.5. Alphabetical Language Reference</a></dt>
  
  
  <a name="keycodes-vs.-code-points">
  <dt>keycodes vs. code points: <a href="../ch20_05.htm#INDEX-2463">20.5. Alphabetical Language Reference</a></dt>
  
</dl></dd>


<!-- ========================== -->


<a name="layer-structure-for-Flash-movies">
<dt>layer structure for Flash movies: <a href="../ch01_03.htm#INDEX-106">1.3.2. Building the Layer Structure</a></dt><dd><dl>
  <dt><a href="../ch13_04.htm#INDEX-1647">13.4.1. The Internal Layer Stack</a></dt>
</dl></dd>


<!-- ========================== -->


<a name="layers-checking-for-hidden">
<dt>layers, checking for hidden: <a href="../ch16_05.htm#INDEX-2065">16.5. Where's All the Code?</a></dt>


<!-- ========================== -->


<a name="le-less-than-or-equal-to-operator-Flash-4">
<dt>le (less-than-or-equal-to) operator (Flash 4): <a href="../ch03_04.htm#INDEX-356">3.4.4. Flash 4-to-Flash 5 Datatype Conversion</a></dt><dd><dl>
  <dt><a href="../ch04_06.htm#INDEX-606">4.6.11. Flash 4 Versus Flash 5 String Operators and Functions</a></dt>
</dl></dd>


<!-- ========================== -->


<a name="left-associative-operators">
<dt>left-associative operators: <a href="../ch05_01.htm#INDEX-643">5.1.3. Operator Precedence</a></dt>


<!-- ========================== -->


<a name="LEFT-property-Key-object">
<dt>LEFT property (Key object): <a href="../ch20_05.htm#INDEX-2444">20.5. Alphabetical Language Reference</a></dt>


<!-- ========================== -->


<a name="left-shift-assignment-&lt;&lt;=-operator">
<dt>left shift assignment (&lt;&lt;=) operator: <a href="../ch05_01.htm#INDEX-653">5.1.3. Operator Precedence</a></dt>


<!-- ========================== -->


<a name="left-shift-&lt;&lt;-operator">
<dt>left shift (&lt;&lt;) operator: <a href="../ch15_02.htm#INDEX-1994">15.2.5.3. Left shift</a></dt>


<!-- ========================== -->


<a name="length-Flash-4-function">
<dt>length() (Flash 4 function): <a href="../ch04_06.htm#INDEX-518">4.6.5.1. The length property</a></dt>


<!-- ========================== -->


<a name="length-property">
<dt>length property</dt><dd><dl>
  
  <a name="arguments-object">
  <dt>arguments object: <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
  
  
  <a name="Array-class">
  <dt>Array class: <a href="../ch11_05.htm#INDEX-1357">11.5. Determining the Size of an Array</a></dt><dd><dl>
    <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
    
    <a name="deleting-array-elements">
    <dt>deleting array elements: <a href="../ch11_08.htm#INDEX-1403">11.8.2. Removing Elements with the length Property</a></dt>
    
    
    <a name="extending-arrays-without-assigning-values-to-elements">
    <dt>extending arrays without assigning values to elements: <a href="../ch11_07.htm#INDEX-1376">11.7.2. Adding New Elements with the length Property</a></dt>
    
  </dl></dd>
  
  
  <a name="String-class">
  <dt>String class: <a href="../ch04_06.htm#INDEX-516">4.6.5.1. The length property</a></dt><dd><dl>
    <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
  </dl></dd>
  
</dl></dd>


<!-- ========================== -->


<a name="less-than-lt-operator-Flash-4">
<dt>less-than (lt) operator (Flash 4): <a href="../ch03_04.htm#INDEX-353">3.4.4. Flash 4-to-Flash 5 Datatype Conversion</a></dt><dd><dl>
  <dt><a href="../ch04_06.htm#INDEX-603">4.6.11. Flash 4 Versus Flash 5 String Operators and Functions</a></dt>
</dl></dd>


<!-- ========================== -->


<a name="less-than-or-equal-to-le-operator-Flash-4">
<dt>less-than-or-equal-to (le) operator (Flash 4): <a href="../ch03_04.htm#INDEX-355">3.4.4. Flash 4-to-Flash 5 Datatype Conversion</a></dt><dd><dl>
  <dt><a href="../ch04_06.htm#INDEX-605">4.6.11. Flash 4 Versus Flash 5 String Operators and Functions</a></dt>
</dl></dd>


<!-- ========================== -->


<a name="less-than-or-equal-to-&lt;=-operator-Flash-5">
<dt>less-than-or-equal-to (&lt;=) operator (Flash 5): <a href="../ch04_06.htm#INDEX-507">4.6.2.2. Character order and alphabetic comparisons</a></dt><dd><dl>
  <dt><a href="../ch05_05.htm#INDEX-749">5.5.3. The Less-Than-or-Equal-to Operator</a></dt>
</dl></dd>


<!-- ========================== -->
<a name="_leveln-global-property">
<dt>_leveln global property: <a href="../ch02_05.htm#INDEX-227">2.5.6.2. Accessing variables on different document levels</a></dt><dd><dl>
  <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
  
  <a name="document-stacks">
  <dt>document stacks: <a href="../ch13_04.htm#INDEX-1672">13.4.3. The .swf Document &quot;_level&quot; Stack</a></dt><dd><dl>
    <dt><a href="../ch13_05.htm#INDEX-1710">13.5.4.2. Referencing other documents in the Player using _leveln</a></dt>
  </dl></dd>
  
  
  <a name="referencing-documents-in-Player">
  <dt>referencing documents in Player: <a href="../ch13_05.htm#INDEX-1704">13.5.4.2. Referencing other documents in the Player using _leveln</a></dt>
  
</dl></dd>



<a name="levels">
<dt>levels (see <a href="idx_d.htm#document-levels">document levels</a>)
</dt>


<!-- ========================== -->


<a name="lexical-structure-of-ActionScript">
<dt>lexical structure of ActionScript: <a href="../ch14_01.htm#INDEX-1873">14. Lexical Structure</a></dt>


<!-- ========================== -->


<a name="Library">
<dt>Library</dt><dd><dl>
  
  <a name="creating-clip-instances-manually">
  <dt>creating clip instances manually: <a href="../ch13_03.htm#INDEX-1614">13.3.2.1. Manually creating instances</a></dt>
  
  
  <a name="creating-new-instances-from">
  <dt>creating new instances from: <a href="../ch13_03.htm#INDEX-1623">13.3.2.3. Creating instances with attachMovie( )</a></dt><dd><dl>
    <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
  </dl></dd>
  
</dl></dd>


<!-- ========================== -->


<a name="LIFO-last-in-first-out-stacks">
<dt>LIFO (last-in-first-out) stacks: <a href="../ch11_07.htm#INDEX-1382">11.7.3.1. The push( ) method</a></dt>


<!-- ========================== -->


<a name="line-breaks">
<dt>line breaks</dt><dd><dl>
  
  <a name="in-ActionScript-code">
  <dt>in ActionScript code: <a href="../ch14_01.htm#INDEX-1880">14.1. Whitespace</a></dt>
  
  
  <a name="HTML-support-in-text-fields">
  <dt>HTML support in text fields: <a href="../ch18_05.htm#INDEX-2224">18.5.6. &lt;BR> (Line Break)</a></dt>
  
  
  <a name="in-strings">
  <dt>in strings: <a href="../ch04_05.htm#INDEX-468">4.5.2.2. Escape sequences</a></dt><dd><dl>
    <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
  </dl></dd>
  
</dl></dd>


<!-- ========================== -->


<a name="Line-Display-options-for-text-fields">
<dt>Line Display options for text fields: <a href="../ch18_03.htm#INDEX-2159">18.3.1. Line Display</a></dt>


<!-- ========================== -->


<a name="Lingo">
<dt>Lingo</dt><dd><dl>
  
  <a name="arrays-in-ActionScript-and-C-vs.">
  <dt>arrays in ActionScript and C vs.: <a href="../ch11_02.htm#INDEX-1339">11.2.3. Array Size</a></dt>
  
  
  <a name="communicating-with">
  <dt>communicating with: <a href="../ch20_05.htm#INDEX-2392">20.5. Alphabetical Language Reference</a></dt>
  
</dl></dd>


<!-- ========================== -->


<a name="lingo-protocol-getURL">
<dt>lingo protocol (getURL()): <a href="../ch20_05.htm#INDEX-2419">20.5. Alphabetical Language Reference</a></dt>


<!-- ========================== -->


<a name="linkage-identifiers">
<dt>linkage identifiers: <a href="../ch20_05.htm#INDEX-2652">20.5. Alphabetical Language Reference</a></dt>


<!-- ========================== -->


<a name="linked-clips">
<dt>linked clips: <a href="../ch13_02.htm#INDEX-1602">13.2.6. Linked Clips</a></dt>


<!-- ========================== -->


<a name="List-Objects-command-debugging-tool">
<dt>List Objects command (debugging tool): <a href="../ch19_01.htm#INDEX-2286">19.1.3. The List Objects Command</a></dt>


<!-- ========================== -->


<a name="List-Variables-command-debugging-tool">
<dt>List Variables command (debugging tool): <a href="../ch19_01.htm#INDEX-2284">19.1.2. The List Variables Command</a></dt>


<!-- ========================== -->


<a name="literals">
<dt>literals: <a href="../ch01_02.htm#INDEX-64">1.2.2. Expressions</a></dt><dd><dl>
  
  <a name="array">
  <dt>array: <a href="../ch11_03.htm#INDEX-1347">11.3.2. Array Literals</a></dt>
  
  
  <a name="floating-point">
  <dt>floating-point: <a href="../ch04_03.htm#INDEX-385">4.3.2. Floating-Point Literals</a></dt>
  
  
  <a name="function">
  <dt>function: <a href="../ch09_05.htm#INDEX-1026">9.5. Function Literals</a></dt><dd><dl>
    
    <a name="adding-methods-to-classes">
    <dt>adding methods to classes: <a href="../ch12_05.htm#INDEX-1518">12.5.2.3. Assigning methods to objects of a class</a></dt>
    
    
    <a name="implementing-methods-with">
    <dt>implementing methods with: <a href="../ch12_04.htm#INDEX-1492">12.4. Methods</a></dt>
    
  </dl></dd>
  
  
  <a name="integer">
  <dt>integer: <a href="../ch04_03.htm#INDEX-375">4.3.1. Integer Literals</a></dt>
  
  
  <a name="numeric">
  <dt>numeric: <a href="../ch04_03.htm#INDEX-371">4.3. Numeric Literals</a></dt>
  
  
  <a name="object">
  <dt>object: <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
  
  
  <a name="string">
  <dt>string: <a href="../ch04_05.htm#INDEX-457">4.5.2. String Literals</a></dt>
  
  
  <a name="vs.-variables">
  <dt>vs. variables: <a href="../ch03_03.htm#INDEX-272">3.3. Creating and Categorizing Data</a></dt>
  
</dl></dd>


<!-- ========================== -->


<a name="ll-property-transformobject">
<dt>ll property (transformobject): <a href="../ch20_05.htm#INDEX-2646">20.5. Alphabetical Language Reference</a></dt>


<!-- ========================== -->


<a name="LN10-property-Math-object">
<dt>LN10 property (Math object): <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>


<!-- ========================== -->


<a name="load-movie-clip-event">
<dt>load movie clip event: <a href="../ch10_10.htm#INDEX-1219">10.10.2. load</a></dt>


<!-- ========================== -->


<a name="load-movie-clip-event-handler">
<dt>load movie clip event handler: <a href="../ch10_10.htm#INDEX-1221">10.10.2. load</a></dt><dd><dl>
  <dt><a href="../ch20_05.htm#INDEX-2588">20.5. Alphabetical Language Reference</a></dt>
  
  <a name="order-of-execution">
  <dt>order of execution: <a href="../ch10_12.htm#INDEX-1296">10.12. Order of Execution</a></dt>
  
</dl></dd>


<!-- ========================== -->


<a name="load-XML-class">
<dt>load() (XML class): <a href="../ch20_05.htm#INDEX-2701">20.5. Alphabetical Language Reference</a></dt><dd><dl>
  <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
</dl></dd>


<!-- ========================== -->


<a name="loaded-property-XML-class">
<dt>loaded property (XML class): <a href="../ch20_05.htm#INDEX-2671">20.5. Alphabetical Language Reference</a></dt><dd><dl>
  <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
  
  <a name="XML.status-property-and">
  <dt>XML.status property and: <a href="../ch20_05.htm#INDEX-2770">20.5. Alphabetical Language Reference</a></dt>
  
</dl></dd>


<!-- ========================== -->


<a name="loadMovie">
<dt>loadMovie()</dt><dd><dl>
  
  <a name="global-function">
  <dt>global function: <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt><dd><dl>
    
    <a name="target-parameter-and">
    <dt>target parameter and: <a href="../ch13_08.htm#INDEX-1847">13.8.3.1. Method versus global function overlap issues</a></dt>
    
  </dl></dd>
  
  
  <a name="loading-external-SWF-files-into-Player">
  <dt>loading external SWF files into Player: <a href="../ch13_03.htm#INDEX-1631">13.3.4. Importing External Movies</a></dt>
  
  
  <a name="MovieClip-class">
  <dt>MovieClip class: <a href="../ch13_08.htm#INDEX-1815">13.8.3. Built-in Movie Clip Methods</a></dt><dd><dl>
    <dt><a href="../ch20_05.htm#INDEX-2557">20.5. Alphabetical Language Reference</a></dt>
    <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
    
    <a name="using-data-event-handlers">
    <dt>using data event handlers: <a href="../ch10_10.htm#INDEX-1236">10.10.4.2. Using a data event handler with loadMovie( )</a></dt>
    
    
    <a name="load-unload-movie-clip-events">
    <dt>load/unload movie clip events: <a href="../ch10_10.htm#INDEX-1230">10.10.3. unload</a></dt>
    
  </dl></dd>
  
  
  <a name="using-with-attachMovie">
  <dt>using with attachMovie(): <a href="../ch13_03.htm#INDEX-1634">13.3.4. Importing External Movies</a></dt>
  
</dl></dd>


<!-- ========================== -->


<a name="loadMovieNum-global-function">
<dt>loadMovieNum() global function: <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>


<!-- ========================== -->


<a name="loadVariables">
<dt>loadVariables()</dt><dd><dl>
  
  <a name="global-function">
  <dt>global function: <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt><dd><dl>
    
    <a name="security-restrictions-for">
    <dt>security restrictions for: <a href="../ch20_05.htm#INDEX-2470">20.5. Alphabetical Language Reference</a></dt>
    
    
    <a name="sending-form-based-data-to-server-applications">
    <dt>sending form-based data to server applications: <a href="../ch17_02.htm#INDEX-2135">17.2.2. Sending Data to the Server</a></dt>
    
    
    <a name="target-parameter-and">
    <dt>target parameter and: <a href="../ch13_08.htm#INDEX-1848">13.8.3.1. Method versus global function overlap issues</a></dt>
    
  </dl></dd>
  
  
  <a name="MovieClip-class">
  <dt>MovieClip class: <a href="../ch13_08.htm#INDEX-1817">13.8.3. Built-in Movie Clip Methods</a></dt><dd><dl>
    <dt><a href="../ch20_05.htm#INDEX-2559">20.5. Alphabetical Language Reference</a></dt>
    <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
    
    <a name="using-data-event-handlers">
    <dt>using data event handlers: <a href="../ch10_10.htm#INDEX-1235">10.10.4.1. Using a data event handler with loadVariables( )</a></dt>
    
  </dl></dd>
  
</dl></dd>


<!-- ========================== -->


<a name="loadVariablesNum-global-function">
<dt>loadVariablesNum() global function: <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>


<!-- ========================== -->


<a name="local-scope-of-functions">
<dt>local scope of functions: <a href="../ch09_07.htm#INDEX-1037">9.7. Function Scope</a></dt>


<!-- ========================== -->


<a name="local-variables">
<dt>local variables: <a href="../ch02_05.htm#INDEX-193">2.5.4. Variable Accessibility (Scope)</a></dt><dd><dl>
  <dt><a href="../ch02_05.htm#INDEX-237">2.5.8. Local Variables</a></dt>
  
  <a name="creating">
  <dt>creating: <a href="../ch09_07.htm#INDEX-1050">9.7.2. Local Variables</a></dt>
  
  
  <a name="nonlocal-variables-and">
  <dt>nonlocal variables and: <a href="../ch02_05.htm#INDEX-243">2.5.8. Local Variables</a></dt>
  
</dl></dd>


<!-- ========================== -->


<a name="localToGlobal-MovieClip-class">
<dt>localToGlobal() (MovieClip class): <a href="../ch13_08.htm#INDEX-1819">13.8.3. Built-in Movie Clip Methods</a></dt><dd><dl>
  <dt><a href="../ch20_05.htm#INDEX-2561">20.5. Alphabetical Language Reference</a></dt>
  <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
</dl></dd>


<!-- ========================== -->


<a name="log-Math-object">
<dt>log() (Math object): <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>


<!-- ========================== -->


<a name="logarithm">
<dt>logarithm: <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt><dd><dl>
  <dt>(see also <a href="idx_n.htm#natural-logarithm">natural logarithm</a>)</dt>
  
  <a name="of-e-base-2">
  <dt>of e (base-2): <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
  
</dl></dd>


<!-- ========================== -->


<a name="LOG10E-property-Math-object">
<dt>LOG10E property (Math object): <a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>


<!-- ========================== -->


<a name="logic-in-Flash-movies">
<dt>logic in Flash movies: <a href="../ch01_02.htm#INDEX-69">1.2.3.1. Making choices using conditionals</a></dt>


<!-- ========================== -->


<a name="logical-AND-&amp;&amp;-operator-Flash-5">
<dt>logical AND (&amp;&amp;) operator (Flash 5): <a href="../ch05_07.htm#INDEX-766">5.7.2. Logical AND</a></dt>


<!-- ========================== -->


<a name="logical-AND-and-operator-Flash-4">
<dt>logical AND (and) operator (Flash 4): <a href="../ch14_04.htm#INDEX-1906">14.4. Reserved Words</a></dt>


<!-- ========================== -->


<a name="logical-expressions-and-data-values">
<dt>logical expressions and data values: <a href="../ch05_07.htm#INDEX-770">5.7.4. Logical Expressions and Data Values</a></dt>


<!-- ========================== -->


<a name="logical-NOT-!-operator-Flash-5">
<dt>logical NOT (!) operator (Flash 5): <a href="../ch05_07.htm#INDEX-768">5.7.3. Logical NOT</a></dt>


<!-- ========================== -->


<a name="logical-NOT-not-operator-Flash-4">
<dt>logical NOT (not) operator (Flash 4): <a href="../ch14_04.htm#INDEX-1908">14.4. Reserved Words</a></dt>


<!-- ========================== -->


<a name="logical-operators">
<dt>logical operators: <a href="../ch05_07.htm#INDEX-761">5.7. The Logical Operators</a></dt><dd><dl>
  
  <a name="vs.-bitwise-operators">
  <dt>vs. bitwise operators: <a href="../ch05_11.htm#INDEX-782">5.11.1. The Bitwise Operators</a></dt>
  
</dl></dd>


<!-- ========================== -->


<a name="logical-OR-||-operator-Flash-5">
<dt>logical OR (||) operator (Flash 5): <a href="../ch05_07.htm#INDEX-764">5.7.1. Logical OR</a></dt>


<!-- ========================== -->


<a name="logical-OR-or-operator-Flash-4">
<dt>logical OR (or) operator (Flash 4): <a href="../ch14_04.htm#INDEX-1910">14.4. Reserved Words</a></dt>


<!-- ========================== -->


<a name="long-keyword-potential-reserved-word">
<dt>long keyword (potential reserved word): <a href="../ch14_04.htm#INDEX-1944">14.4. Reserved Words</a></dt>


<!-- ========================== -->


<a name="loop-body">
<dt>loop body: <a href="../ch08_02.htm#INDEX-923">8.2. Loop Terminology</a></dt>


<!-- ========================== -->


<a name="loop-controls">
<dt>loop controls: <a href="../ch08_02.htm#INDEX-926">8.2. Loop Terminology</a></dt>


<!-- ========================== -->


<a name="loop-headers">
<dt>loop headers: <a href="../ch08_02.htm#INDEX-924">8.2. Loop Terminology</a></dt>


<!-- ========================== -->


<a name="loops">
<dt>loops: <a href="../ch06_03.htm#INDEX-832">6.3.1. Loops and Conditionals</a></dt><dd><dl>
  <dt><a href="../ch08_01.htm#INDEX-887">8. Loop Statements</a></dt>
  
  <a name="break-statement-in">
  <dt>break statement in: <a href="../ch08_06.htm#INDEX-949">8.6.1. The break Statement</a></dt>
  
  
  <a name="clip-events">
  <dt>clip events (see <a href="idx_m.htm#movie-clip-events-loops">movie clip events, loops</a>)
</dt>
  
  
  <a name="continue-statement-in">
  <dt>continue statement in: <a href="../ch08_06.htm#INDEX-951">8.6.2. The continue Statement</a></dt>
  
  
  <a name="counters-in">
  <dt>counters in: <a href="../ch08_01.htm#INDEX-899">8.1. The while Loop</a></dt><dd><dl>
    <dt><a href="../ch08_04.htm#INDEX-935">8.4.1. Multiple Iterators in for Loops</a></dt>
  </dl></dd>
  
  
  <a name="event">
  <dt>event: <a href="../ch01_02.htm#INDEX-101">1.2.6. The Event-Based Execution Model</a></dt>
  
  
  <a name="index-variables-in">
  <dt>index variables in: <a href="../ch08_01.htm#INDEX-903">8.1. The while Loop</a></dt><dd><dl>
    <dt><a href="../ch08_04.htm#INDEX-939">8.4.1. Multiple Iterators in for Loops</a></dt>
  </dl></dd>
  
  
  <a name="infinite">
  <dt>infinite: <a href="../ch08_01.htm#INDEX-895">8.1. The while Loop</a></dt><dd><dl>
    <dt><a href="../ch08_02.htm#INDEX-929">8.2. Loop Terminology</a></dt>
    
    <a name="avoiding">
    <dt>avoiding: <a href="../ch08_06.htm#INDEX-952">8.6.3. Maximum Number of Iterations</a></dt>
    
  </dl></dd>
  
  
  <a name="initialization">
  <dt>initialization: <a href="../ch08_01.htm#INDEX-891">8.1. The while Loop</a></dt><dd><dl>
    <dt><a href="../ch08_02.htm#INDEX-907">8.2. Loop Terminology</a></dt>
  </dl></dd>
  
  
  <a name="iteration-in">
  <dt>iteration in: <a href="../ch01_02.htm#INDEX-71">1.2.3.2. Repeating tasks using loops</a></dt><dd><dl>
    <dt><a href="../ch08_02.htm#INDEX-914">8.2. Loop Terminology</a></dt>
  </dl></dd>
  
  
  <a name="iterators-in">
  <dt>iterators in: <a href="../ch08_01.htm#INDEX-901">8.1. The while Loop</a></dt><dd><dl>
    <dt><a href="../ch08_04.htm#INDEX-937">8.4.1. Multiple Iterators in for Loops</a></dt>
  </dl></dd>
  
  
  <a name="nested">
  <dt>nested: <a href="../ch08_02.htm#INDEX-916">8.2. Loop Terminology</a></dt>
  
  
  <a name="stopping-prematurely">
  <dt>stopping prematurely: <a href="../ch08_06.htm#INDEX-947">8.6. Stopping a Loop Prematurely</a></dt>
  
  
  <a name="terminology">
  <dt>terminology: <a href="../ch08_02.htm#INDEX-906">8.2. Loop Terminology</a></dt>
  
  
  <a name="test-expressions-in">
  <dt>test expressions in: <a href="../ch08_02.htm#INDEX-910">8.2. Loop Terminology</a></dt>
  
  
  <a name="timeline">
  <dt>timeline: <a href="../ch08_07.htm#INDEX-960">8.7. Timeline and Clip Event Loops</a></dt><dd><dl>
    
    <a name="creating-process-clips">
    <dt>creating process clips: <a href="../ch13_02.htm#INDEX-1597">13.2.4. Process Clips</a></dt>
    
    
    <a name="frame-rate-effect-on">
    <dt>frame rate effect on: <a href="../ch08_07.htm#INDEX-978">8.7.3. Frame Rate's Effect on Timeline and Clip Event Loops</a></dt>
    
  </dl></dd>
  
  
  <a name="update-statements-in">
  <dt>update statements in: <a href="../ch08_01.htm#INDEX-897">8.1. The while Loop</a></dt><dd><dl>
    <dt><a href="../ch08_02.htm#INDEX-912">8.2. Loop Terminology</a></dt>
  </dl></dd>
  
</dl></dd>


<!-- ========================== -->


<a name="lowercase-versions-of-strings-creating">
<dt>lowercase versions of strings, creating: <a href="../ch04_06.htm#INDEX-570">4.6.8.2. The toLowerCase( ) function</a></dt><dd><dl>
  <dt><a href="../ch20_05.htm#INDEX-">20.5. Alphabetical Language Reference</a></dt>
</dl></dd>


<!-- ========================== -->


<a name="lr-property-transformobject">
<dt>lr property (transformobject): <a href="../ch20_05.htm#INDEX-2647">20.5. Alphabetical Language Reference</a></dt>

</dl>

<!-- BOTTOM INDEX LINKS -->

<p>
<hr width="515" align="LEFT">
</p>

<p>
<font size="-1">
<a href="idx_0.htm">Symbols</a>
| <a href="idx_a.htm">A</a>
| <a href="idx_b.htm">B</a>
| <a href="idx_c.htm">C</a>
| <a href="idx_d.htm">D</a>
| <a href="idx_e.htm">E</a>
| <a href="idx_f.htm">F</a>
| <a href="idx_g.htm">G</a>
| <a href="idx_h.htm">H</a>
| <a href="idx_i.htm">I</a>
| <a href="idx_j.htm">J</a>
| <a href="idx_k.htm">K</a>
| <a href="idx_l.htm">L</a>
| <a href="idx_m.htm">M</a>
| <a href="idx_n.htm">N</a>
| <a href="idx_o.htm">O</a>
| <a href="idx_p.htm">P</a>
| <a href="idx_q.htm">Q</a>
| <a href="idx_r.htm">R</a>
| <a href="idx_s.htm">S</a>
| <a href="idx_t.htm">T</a>
| <a href="idx_u.htm">U</a>
| <a href="idx_v.htm">V</a>
| <a href="idx_w.htm">W</a>
| <a href="idx_x.htm">X</a>
| <a href="idx_y.htm">Y</a>
| <a href="idx_z.htm">Z</a>
</font>

<!-- LIBRARY NAV BAR -->

<p><hr width="515" align="left"></p>
<img 
  src="../../gifs/smnavbar.gif"
  usemap="#library-map"
  border="0"
  alt="Library Navigation Links"
>

<p>
<font size="-1">
<a href="../../copyrght.htm">Copyright &copy; 2002</a>
O'Reilly &amp; Associates, Inc.
All Rights Reserved.
</font>
</p>

<map name="library-map">
<area href="../../index.htm" coords="0,1,78,93" shape="rect" /><area href="../../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>
</map>

<!-- END OF BODY -->

</body>
</html>
