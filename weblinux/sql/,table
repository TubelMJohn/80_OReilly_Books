ch15_01.htm:</pre></td><td align="right" /></tr></table><p>The <tt class="literal">ALTER</tt>
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Creates new database elements (or entirely new databases). This
ch15_01.htm:</table><p>In addition to the main types, several modifiers can also be used to
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Deletes rows from a table. When used without a
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Gives information about a table or column. While this statement works
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Permanently remove a database, table, index, or function from the
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Displays verbose information about the order and structure of a
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Flushes or resets various internal processes depending on the
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Previous to MySQL 3.22.11, the <tt class="literal">GRANT</tt> statement was
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Inserts data into a table. The first form of this statement simply
ch15_01.htm:<a name="INDEX-966" /><a name="INDEX-967" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>KILL</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>KILL thread_id</pre></td><td align="right" /></tr></table><p>Terminates the specified thread. The thread ID numbers can be found
ch15_01.htm:LOAD DATA [LOCAL] INFILE <em class="replaceable">file</em> [REPLACE|IGNORE] INTO TABLE <em class="replaceable">table</em> [<em class="replaceable">delimiters</em>] [(<em class="replaceable">columns</em>)]</pre></td><td align="right" /></tr></table><p>Reads a text file that is in a readable format and inserts the data
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Locks a table for the use of a specific thread. This command is
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Recreates a table eliminating any wasted space. This is done by
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Inserts data to a table, replacing any old data that conflicts. This
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Removes a privilege from a user. The values of privilege, table, and
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Retrieve data from a database. The <tt class="literal">SELECT</tt>
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Defines an option for the current session. Values set by this
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Displays various information about the MySQL system. This statement
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Unlocks all tables that were locked using the <tt class="literal">LOCK</tt>
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Alters data within a table. This statement is used to change actual
ch15_01.htm:</pre></td><td align="right" /></tr></table><p>Selects the default database. The database given in this statement is
ch15_02.htm:</pre></td><td align="right" /></tr></table><p>Creates new database elements (or entirely new databases). This
ch15_02.htm:</pre></td><td align="right" /></tr></table><p>Deletes rows from a table. When used without a
ch15_02.htm:</pre></td><td align="right" /></tr></table><p>Permanently remove a table, index, or sequence from the mSQL system.</p><a name="ch15-52-fm2xml" /><blockquote><h4 class="objtitle">WARNING</h4>
ch15_02.htm:</pre></td><td align="right" /></tr></table><p>Inserts data into a table. This statement inserts the given values
ch15_02.htm:</pre></td><td align="right" /></tr></table><p>Retrieves data from a database. The <tt class="literal">SELECT</tt>
ch15_02.htm:</pre></td><td align="right" /></tr></table><p>Alters data within a table. This statement is used to change actual
ch17_01.htm:</pre></td><td align="right" /></tr></table><p>Performs operations on the database table files themselves (called
ch17_01.htm:</pre></td><td align="right" /></tr></table><p>Displays information about ISAM logs. An ISAM log is generated if the
ch17_01.htm:</pre></td><td align="right" /></tr></table><p>The MySQL command line monitor. This program is the most basic way to
ch17_01.htm:</pre></td><td align="right" /></tr></table><p>Displays and modifies access rights for the MySQL server. You may
ch17_01.htm:</pre></td><td align="right" /></tr></table><p>Performs operations that affect the database server as a whole. This
ch17_01.htm:<a name="INDEX-1238" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysqlbug</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>mysqlbug</pre></td><td align="right" /></tr></table><p>Report a bug in a MySQL program or utility. This program collects
ch17_01.htm:</pre></td><td align="right" /></tr></table><p>The MySQL server daemon. All other programs interact with the
ch17_01.htm:</pre></td><td align="right" /></tr></table><p>Outputs the contents of the given database (or table within a
ch17_01.htm:</pre></td><td align="right" /></tr></table><p>Reads a file of data in a variety of common formats (such as comma
ch17_01.htm:</pre></td><td align="right" /></tr></table><p>Displays the layout of the requested database, table or field. If no
ch17_02.htm:</pre></td><td align="right" /></tr></table><p>The mSQL command line monitor. This program is the most basic way to
ch17_02.htm:</pre></td><td align="right" /></tr></table><p>The mSQL server daemon. All other programs interact with the database
ch17_02.htm:</pre></td><td align="right" /></tr></table><p>Performs operations that affect the database server as a whole. This
ch17_02.htm:</pre></td><td align="right" /></tr></table><p>Outputs the contents of the given database (or table within a
ch17_02.htm:</pre></td><td align="right" /></tr></table><p>Outputs the contents of the given table in ASCII delimited format.</p>
ch17_02.htm:</pre></td><td align="right" /></tr></table><p>Reads an ASCII delimited file and inserts the data into the given
ch17_02.htm:</pre></td><td align="right" /></tr></table><p>Displays the layout of the requested database, table, index, or
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Returns the absolute value of <tt class="literal">number</tt>.</p></div>
ch18_01.htm:$escaped_string = addslashes($string);</pre></td><td align="right" /></tr></table><p>Returns a copy of <tt class="literal">string</tt> with any
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Returns a sorted copy of the associative array
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Returns the decimal equivalent of <tt class="literal">binary</tt>.</p></div>
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Rounds <tt class="literal">number</tt> to the next highest integer and
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Changes the current working directory to <tt class="literal">directory</tt>.</p></div>
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Changes the file <tt class="literal">file</tt> to belong to the group
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Changes the file to have the permissions
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Changes the file to belong to the owner <tt class="literal">owner</tt>.
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">string</tt> with all trailing new lines,
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Returns the character that corresponds to the ASCII value of
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Empties the current stack. This function is a kludge designed to
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Empties the cache used for any functions that access information
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Closes a directory opened with <tt class="literal">opendir</tt>.</p></div>
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Stops all logging done via <tt class="literal">syslog</tt>.</p></div>
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Returns the cosine of <tt class="literal">number</tt>.</p></div>
ch18_01.htm:$number = count($array);</pre></td><td align="right" /></tr></table><p>Returns the number of elements in <tt class="literal">array</tt>. If
ch18_01.htm:$encrypted_string = crypt($string, $salt);</pre></td><td align="right" /></tr></table><p>Returns an encrypted version of <tt class="literal">string</tt>. The
ch18_01.htm:</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">time</tt> (a standard Unix time as given by the
ch18_01.htm:$db_info = dblist();</pre></td><td align="right" /></tr></table><p>Returns a list of the databases supported by PHP.</p></div>
ch18_01.htm:$binary = decbin($decimal);</pre></td><td align="right" /></tr></table><p>Returns the binary equivalent of <tt class="literal">decimal</tt>.</p></div>
ch18_01.htm:$hex = dechex($decimal);</pre></td><td align="right" /></tr></table><p>Returns the hexadecimal equivalent of <tt class="literal">decimal</tt>.</p></div>
ch18_01.htm:$octal = decoct($decimal);</pre></td><td align="right" /></tr></table><p>Returns the octal equivalent of <tt class="literal">decimal</tt>.</p></div>
ch18_01.htm:$double = doubleval($variable);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">variable</tt> as a floating point number.</p></div>
ch18_01.htm:echo [format_string] expression [, expression ...]</pre></td><td align="right" /></tr></table><p>This is not a true function but rather PHP's built-in version
ch18_01.htm:end($array);</pre></td><td align="right" /></tr></table><p>Sets the internal pointer of <tt class="literal">array</tt> to the end of
ch18_01.htm:$result = ereg($expression, $string);</pre></td><td align="right" /></tr></table><p>$result = ereg($expression, $string, $match_array);</p><p>Returns a true value if <tt class="literal">string</tt> matches the regular
ch18_01.htm:$result = eregi($expression, $string, $match_array);</pre></td><td align="right" /></tr></table><p>Identical to <b class="function">ereg</b>  except that case is ignored
ch18_01.htm:ereg_replace($expression, $replacement_string, $string);</pre></td><td align="right" /></tr></table><p>Replaces all parts of <tt class="literal">string</tt> that match
ch18_01.htm:eregi_replace($expression, $replacement_string, $string);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">ereg_replace</tt> except that case is
ch18_01.htm:$safe_string = escapeshellcmd($string);</pre></td><td align="right" /></tr></table><p>Returns a copy of <tt class="literal">string</tt> with its characters
ch18_01.htm:eval($string);</pre></td><td align="right" /></tr></table><p>Evaluates the contents of <tt class="literal">string</tt> as if it were a
ch18_01.htm:</td><td align="right" /></tr></table><p>$last_line = exec($command, $output_array);</p><p>Executes <tt class="literal">command</tt> as a Unix command in a subshell.
ch18_01.htm:exit();</pre></td><td align="right" /></tr></table><p>Ends all parsing of the HTML file.</p></div>
ch18_01.htm:$result = exp($number);</pre></td><td align="right" /></tr></table><p>Returns the number <em class="emphasis">e</em> raised to the
ch18_01.htm:fclose($fd);</pre></td><td align="right" /></tr></table><p>Closes a file opened by <tt class="literal">fopen</tt>.</p></div>
ch18_01.htm:$result = feof($fd);</pre></td><td align="right" /></tr></table><p>Returns true if the file descriptor <tt class="literal">fd</tt> is at the
ch18_01.htm:$line = fgets($fd, $max_bytes);</pre></td><td align="right" /></tr></table><p>Returns the next line (up to <tt class="literal">max_bytes</tt> in length)
ch18_01.htm:fgetss</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$line = fgetss($fd, $max_bytes);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">fgets</tt> except that it attempts to
ch18_01.htm:$array = file($filename);</pre></td><td align="right" /></tr></table><p>Returns an array containing every line in the file
ch18_01.htm:$time = fileatime($filename);</pre></td><td align="right" /></tr></table><p>Returns (in standard Unix time format) the last time
ch18_01.htm:$time = filectime($filename);</pre></td><td align="right" /></tr></table><p>Returns (in standard Unix time format) the last time
ch18_01.htm:$group_id = filegroup($filename);</pre></td><td align="right" /></tr></table><p>Returns the group ID of filename's group. If this information
ch18_01.htm:$inode = fileinode($filename);</pre></td><td align="right" /></tr></table><p>Returns the inode of <tt class="literal">filename</tt>. If this information
ch18_01.htm:$time = filemtime($filename);</pre></td><td align="right" /></tr></table><p>Returns (in standard Unix time format) the last time
ch18_01.htm:$owner = fileowner($filename);</pre></td><td align="right" /></tr></table><p>Returns the ID of the owner of the file. If this information cannot
ch18_01.htm:$permissions = fileperms($filename);</pre></td><td align="right" /></tr></table><p>Returns the permissions of <tt class="literal">filename</tt>. If this
ch18_01.htm:$size = filesize($filename);</pre></td><td align="right" /></tr></table><p>Returns the size of <tt class="literal">filename</tt> in bytes. If this
ch18_01.htm:$type = filetype($filename);</pre></td><td align="right" /></tr></table><p>Returns one of the following, indicating the type of
ch18_01.htm:$lower_integer = floor($number);</pre></td><td align="right" /></tr></table><p>Rounds <tt class="literal">number</tt> to the next lowest integer and
ch18_01.htm:flush();</pre></td><td align="right" /></tr></table><p>Flushes the buffer on the standard output so that the end user
ch18_01.htm:$fd = fopen($filename, $mode);</pre></td><td align="right" /></tr></table><p>Opens the file filename in the mode mode and returns a file
ch18_01.htm:fputs($fd, $string);</pre></td><td align="right" /></tr></table><p>Writes <tt class="literal">string</tt> to the file associated with
ch18_01.htm:fpassthru($fd);</pre></td><td align="right" /></tr></table><p>Directly prints all of the remaining data in the file associated with
ch18_01.htm:fseek($fd, $position);</pre></td><td align="right" /></tr></table><p>Positions the file associated with <tt class="literal">fd</tt> to
ch18_01.htm:$fd = fsockopen($hostname,$port);</pre></td><td align="right" /></tr></table><p>Opens a connection with <tt class="literal">hostname</tt> on port
ch18_01.htm:$position = ftell($fd);</pre></td><td align="right" /></tr></table><p>Returns the position of the pointer in the file associated with
ch18_01.htm:$directory = getaccdir();</pre></td><td align="right" /></tr></table><p>Returns the directory where the PHP configuration files are held.</p></div>
ch18_01.htm:$value = getenv($variable);</pre></td><td align="right" /></tr></table><p>Returns the value of the environment variable
ch18_01.htm:$address = gethostbyname($hostname);</pre></td><td align="right" /></tr></table><p>Returns the IP address of <tt class="literal">hostname</tt>.</p></div>
ch18_01.htm:$hostname = gethostbyaddr($address);</pre></td><td align="right" /></tr></table><p>Returns the hostname of the machine with the IP address
ch18_01.htm:$file_info_array = getimagesize($filename);</pre></td><td align="right" /></tr></table><p>Returns an array of information about the image in the file
ch18_01.htm:$time = getlastaccess();</pre></td><td align="right" /></tr></table><p>Returns (in standard Unix time format) the date and time the page was
ch18_01.htm:$browser = getlastbrowser();</pre></td><td align="right" /></tr></table><p>Returns the identification string of the last browser to access the
ch18_01.htm:$email = getlastemail();</pre></td><td align="right" /></tr></table><p>Returns the e-mail address of the last person to access the page.
ch18_01.htm:$host = getlasthost();</pre></td><td align="right" /></tr></table><p>Returns the hostname of the last machine to access the page. This
ch18_01.htm:$time = getlastmod();</pre></td><td align="right" /></tr></table><p>Returns the time (in standard Unix time format) that the page was
ch18_01.htm:$url = getlastref();</pre></td><td align="right" /></tr></table><p>Returns the URL of the referring page of the last visitor to the
ch18_01.htm:$directory = getlogdir();</pre></td><td align="right" /></tr></table><p>Returns the directory that contains the PHP log files.</p></div>
ch18_01.htm:$inode = getmyinode();</pre></td><td align="right" /></tr></table><p>Returns the inode of the HTML file that contains the current PHP
ch18_01.htm:$pid = getmypid();</pre></td><td align="right" /></tr></table><p>Returns the process ID number of the current PHP process.</p></div>
ch18_01.htm:$id = getmyuid();</pre></td><td align="right" /></tr></table><p>Returns the user ID of the owner of the HTML file that contains the
ch18_01.htm:$number = getrandmax();</pre></td><td align="right" /></tr></table><p>Returns the largest possible number that will be returned by
ch18_01.htm:$time = getstartlogging();</pre></td><td align="right" /></tr></table><p>Returns the time (in standard Unix format) that logging began on the
ch18_01.htm:$hits = gettoday();</pre></td><td align="right" /></tr></table><p>Returns the number of hits the page has received since midnight at
ch18_01.htm:$hits = gettotal();</pre></td><td align="right" /></tr></table><p>Returns the total number of hits the page has received since logging
ch18_01.htm:$formatted_date = gmdate($format, $time);</pre></td><td align="right" /></tr></table><p>Identical to Date except that it uses Greenwich Mean time to
ch18_01.htm:header($header_string);</pre></td><td align="right" /></tr></table><p>Outputs <tt class="literal">header_string</tt> as the HTTP header of the
ch18_01.htm:$decimal = hexdec($hex);</pre></td><td align="right" /></tr></table><p>Returns the decimal equivalent of <tt class="literal">hex</tt>.</p></div>
ch18_01.htm:$html_string = htmlspecialchars($string);</pre></td><td align="right" /></tr></table><p>Returns string, replacing any special characters (including &lt;,
ch18_01.htm:imagearc($image, $cx, $cy, $width, $height, $start, $end, $color);</pre></td><td align="right" /></tr></table><p>Draws a partial ellipse in <tt class="literal">image</tt> with the color
ch18_01.htm:imagechar($image, $size, $x, $y, $character, $color);</pre></td><td align="right" /></tr></table><p>Draws <tt class="literal">character</tt> in image with the color
ch18_01.htm:imagecharup($image, $size, $x, $y, $character, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagechar</tt> except that the character
ch18_01.htm:$color = imagecolorallocate($image, $red, $green, $blue);</pre></td><td align="right" /></tr></table><p>Returns a color for use with the image <tt class="literal">image</tt> using
ch18_01.htm:imagecolortransparent($image, $color);</pre></td><td align="right" /></tr></table><p>Sets <tt class="literal">color</tt> as the transparent color for
ch18_01.htm:   $dest_width, $dest_heigth, $src_width, $src_heigth);</pre></td><td align="right" /></tr></table><p>Copies a rectangular portion from <tt class="literal">src_image</tt> and
ch18_01.htm:$image = imagecreate($width, $height);</pre></td><td align="right" /></tr></table><p>Returns an image indentifier representing a new image with the
ch18_01.htm:$image = imagecreatefromgif($filename);</pre></td><td align="right" /></tr></table><p>Returns an image indentifier representing the image contained in the
ch18_01.htm:imagedestroy($image);</pre></td><td align="right" /></tr></table><p>Frees any resources occupied by <tt class="literal">image</tt>.</p></div>
ch18_01.htm:imagefill($image, $x, $y, $color);</pre></td><td align="right" /></tr></table><p>Flood fills <tt class="literal">image</tt> with the color
ch18_01.htm:imagefilledpolygon($image, $points_array, $num_points, $color);</pre></td><td align="right" /></tr></table><p>Creates a polygon in <tt class="literal">image</tt> filled with the color
ch18_01.htm:imagefilledrectangle($image, $x1, $y1, $x2, $y2, $color);</pre></td><td align="right" /></tr></table><p>Creates a rectangle in <tt class="literal">image</tt> filled with the color
ch18_01.htm:imagefilltoborder($image, $x, $y, $border, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagefill</tt> except that the fill stops
ch18_01.htm:imagegif($image);</pre></td><td align="right" /></tr></table><p>imagegif($image, $filename);</p><p>Outputs the contents of <tt class="literal">image</tt> as a GIF image. If a
ch18_01.htm:imageinterlace($image, $interlace);</pre></td><td align="right" /></tr></table><p>Toggles the interlace bit of <tt class="literal">image</tt> to the value of
ch18_01.htm:imageline($image, $x1, $y1, $x2, $y2, $color);</pre></td><td align="right" /></tr></table><p>Creates a line in <tt class="literal">image</tt> of color
ch18_01.htm:imagepolygon($image, $points, $numpoints, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagefilledpolygon</tt> except that the
ch18_01.htm:imagerectangle($image, $x1, $y1, $x2, $y2, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagefilledrectangle</tt> except that the
ch18_01.htm:imagesetpixel($image, $x, $y, $color);</pre></td><td align="right" /></tr></table><p>Draws a single point on <tt class="literal">image</tt> at
ch18_01.htm:imagestring($image, $size, $x, $y, $string, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagechar</tt> except that it outputs the
ch18_01.htm:imagestringup($image, $size, $x, $y, $string, $color);</pre></td><td align="right" /></tr></table><p>Identical to <tt class="literal">imagecharup</tt> except that it outputs
ch18_01.htm:$x_size = imagesx($image);</pre></td><td align="right" /></tr></table><p>Returns the width of <tt class="literal">image</tt> in pixels.</p></div>
ch18_01.htm:$y_size = imagesy($image);</pre></td><td align="right" /></tr></table><p>Returns the height of <tt class="literal">image</tt> in pixels.</p></div>
ch18_01.htm:include($filename);</pre></td><td align="right" /></tr></table><p>Includes the file <tt class="literal">filename</tt> in the current page.
ch18_01.htm:initsyslog();</pre></td><td align="right" /></tr></table><p>Prepares the system for <tt class="literal">syslog</tt> logging. After
ch18_01.htm:$integer = intval($variable);</pre></td><td align="right" /></tr></table><p>Returns the contents of <tt class="literal">variable</tt> as an integer.</p></div>
ch18_01.htm:$defined = isset($variable);</pre></td><td align="right" /></tr></table><p>Returns 1 if <tt class="literal">variable</tt> is defined, 0 otherwise.</p></div>
ch18_01.htm:$key = key($array);</pre></td><td align="right" /></tr></table><p>Returns the key of the next element in <tt class="literal">array</tt>. For
ch18_01.htm:link($target, $filename);</pre></td><td align="right" /></tr></table><p>Creates a hard link from <tt class="literal">filename</tt> to
ch18_01.htm:$info = linkinfo($filename);</pre></td><td align="right" /></tr></table><p>Returns a true value if the link <tt class="literal">filename</tt> exists
ch18_01.htm:$result = log($number);</pre></td><td align="right" /></tr></table><p>Returns the natural logarithm of <tt class="literal">number</tt>.</p></div>
ch18_01.htm:$result = log10($number);</pre></td><td align="right" /></tr></table><p>Returns the base 10 logarithm of <tt class="literal">number</tt>.</p></div>
ch18_01.htm:logas($filename);</pre></td><td align="right" /></tr></table><p>Logs the hit on the current page as a hit on
ch18_01.htm:mail($to, $subject, $message);</pre></td><td align="right" /></tr></table><p>mail($to, $subject, $message, $headers);</p><p>Sends an e-mail message to <tt class="literal">to</tt> with the subject
ch18_01.htm:$maximum = max($array);</pre></td><td align="right" /></tr></table><p>Returns the largest value in <tt class="literal">array</tt>. If
ch18_01.htm:$hash = md5($string);</pre></td><td align="right" /></tr></table><p>Returns the MD5 hash of <tt class="literal">string</tt>.</p></div>
ch18_01.htm:$ms = microtime();</pre></td><td align="right" /></tr></table><p>Returns a string that contains the fractional part of the current
ch18_01.htm:$minimum = min($array);</pre></td><td align="right" /></tr></table><p>Returns the minimum value in <tt class="literal">array</tt>. If array
ch18_01.htm:mkdir($directory, $mode);</pre></td><td align="right" /></tr></table><p>Creates the directory <tt class="literal">directory</tt> with the given
ch18_01.htm:$time = mktime($hour,$minute,$second,$month,$day,$year);</pre></td><td align="right" /></tr></table><p>Returns a time in standard Unix time format based on the parameters
ch18_01.htm:$result = mysql($database, $query);</pre></td><td align="right" /></tr></table><p>Sends the query <tt class="literal">query</tt> to the mSQL/MySQL database
ch18_01.htm:$num_rows = mysql_affected_rows();</pre></td><td align="right" /></tr></table><p>Returns the number of rows affected by the last
ch18_01.htm:mysql_close();</pre></td><td align="right" /></tr></table><p>Closes the connection to the mSQL/MySQL database server.</p></div>
ch18_01.htm:mysql_connect($hostname, $username, $password);</pre></td><td align="right" /></tr></table><p>Creates a connection with the mSQL/MySQL database server at
ch18_01.htm:mysql_createdb($database);</pre></td><td align="right" /></tr></table><p>Creates the given database.</p></div>
ch18_01.htm:$db = mysql_dbname($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the name of the database stored in the <tt class="literal">i</tt>th
ch18_01.htm:mysql_dropdb($database);</pre></td><td align="right" /></tr></table><p>Removes <tt class="literal">database</tt> and all tables within it.</p></div>
ch18_01.htm:$flags = mysql_fieldflags($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the flags belonging to the <tt class="literal">i</tt>th field of
ch18_01.htm:$length = mysql_fieldlen($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the length of the ith field of <tt class="literal">result</tt>.</p></div>
ch18_01.htm:$name = mysql_fieldname($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the column name of the <tt class="literal">i</tt>th field of
ch18_01.htm:$type = mysql_fieldtype($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the type of the <tt class="literal">i</tt>th of
ch18_01.htm:mysql_freeresult($result);</pre></td><td align="right" /></tr></table><p>Frees the memory associated with a mSQL/MySQL result. All memory is
ch18_01.htm:$id_num = mysql_insert_id();</pre></td><td align="right" /></tr></table><p>Returns the ID number used for the last INSERT statement that
ch18_01.htm:$result = mysql_listdbs();</pre></td><td align="right" /></tr></table><p>Returns a result pointer containing the names of all of the databases
ch18_01.htm:$result = mysqllistfields($database, $table);</pre></td><td align="right" /></tr></table><p>Returns a result pointer to information about the fields of the table
ch18_01.htm:$result = mysql_listtables($database);</pre></td><td align="right" /></tr></table><p>Returns a result pointer containing the names of all of the tables
ch18_01.htm:$num_fields = mysql_numfields($result);</pre></td><td align="right" /></tr></table><p>Returns the number of fields within <tt class="literal">result</tt>.</p></div>
ch18_01.htm:$num_rows = mysql_numrows($result);_</pre></td><td align="right" /></tr></table><p>Returns the number of rows within <tt class="literal">result</tt>.</p></div>
ch18_01.htm:$new_string = msql_regcase($string);</pre></td><td align="right" /></tr></table><p>Returns a copy of <tt class="literal">string</tt> which has been
ch18_01.htm:$result_string = mysql_result($result, $I, $field);</pre></td><td align="right" /></tr></table><p>Returns an entry from the field <tt class="literal">field</tt> in the
ch18_01.htm:$name = mysql_tablename($result, $i);</pre></td><td align="right" /></tr></table><p>Returns the name of the table stored in the <tt class="literal">i</tt>th
ch18_01.htm:<a name="INDEX-1592" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>next</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table><p>
ch18_01.htm:$decimal = octdec($octal);</pre></td><td align="right" /></tr></table><p>Returns the decimal equivalent of <tt class="literal">octal</tt>.</p></div>
ch18_01.htm:opendir($directory);</pre></td><td align="right" /></tr></table><p>Opens a directory for use with the <tt class="literal">readdir</tt>
ch18_01.htm:openlog($ident, $options, $facility);</pre></td><td align="right" /></tr></table><p>Opens the system log for writing. This function should be called
ch18_01.htm:$number = ord($character);</pre></td><td align="right" /></tr></table><p>Returns the ASCII value of <tt class="literal">character</tt>.</p></div>
ch18_01.htm:parse_str($string);</pre></td><td align="right" /></tr></table><p>Parses a URL encoded string of the format
ch18_01.htm:passthru($command, $return_value);</pre></td><td align="right" /></tr></table><p>Executes the external command <tt class="literal">command</tt> and sends
ch18_01.htm:pclose($fd);</pre></td><td align="right" /></tr></table><p>Closes a pipe opened with <tt class="literal">popen</tt>.</p></div>
ch18_01.htm:phpinfo();</pre></td><td align="right" /></tr></table><p>Prints an informational page that's useful when debugging the
ch18_01.htm:$version = phpversion();</pre></td><td align="right" /></tr></table><p>Returns the version of PHP that is currently running.</p></div>
ch18_01.htm:$fd = popen($command, $mode);</pre></td><td align="right" /></tr></table><p>Runs the external command <tt class="literal">command</tt> and either sends
ch18_01.htm:$position = pos($array['element']);</pre></td><td align="right" /></tr></table><p>Returns the numerical position of
ch18_01.htm:$result = pow($x, $y);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">x</tt> raised to the power <tt class="literal">y</tt>.</p></div>
ch18_01.htm:$element = prev($array);</pre></td><td align="right" /></tr></table><p>Moves the internal pointer of <tt class="literal">array</tt> to the
ch18_01.htm:putenv($string);</pre></td><td align="right" /></tr></table><p>Puts <tt class="literal">string</tt> into the local environment. Note that
ch18_01.htm:$quoted_string = quotemeta($string);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">string</tt> with all special characters escaped
ch18_01.htm:$number = rand();</pre></td><td align="right" /></tr></table><p>Returns a random number between
ch18_01.htm:$file = readdir();</pre></td><td align="right" /></tr></table><p>Returns the next directory entry in the current open directory and
ch18_01.htm:$filesize = readfile($filename);</pre></td><td align="right" /></tr></table><p>Outputs the contents of <tt class="literal">filename</tt> directly to the
ch18_01.htm:$filename = readline($link);</pre></td><td align="right" /></tr></table><p>Returns the path of the real file referenced by
ch18_01.htm:$result = reg_match($expression, $string, $array);</pre></td><td align="right" /></tr></table><p>Identical to <b class="function">ereg</b> . This function is included
ch18_01.htm:reg_replace($expression, $replacement, $string);</pre></td><td align="right" /></tr></table><p>Identical to <b class="function">ereg_replace</b> . This function is
ch18_01.htm:$partial_string = reg_search($expression, $string, $array);</pre></td><td align="right" /></tr></table><p>Identical to <b class="function">ereg</b>  except that the portion of
ch18_01.htm:reset($array);</pre></td><td align="right" /></tr></table><p>Moves the internal pointer of <tt class="literal">array</tt> to the first
ch18_01.htm:return($value);</pre></td><td align="right" /></tr></table><p>Exits the current user-defined function and returns
ch18_01.htm:rewind($fd);</pre></td><td align="right" /></tr></table><p>Moves the file pointer for <tt class="literal">fd</tt> to the beginning of
ch18_01.htm:rewinddir();</pre></td><td align="right" /></tr></table><p>Moves the current directory pointer to the beginning of the directory.</p></div>
ch18_01.htm:rmdir($directory);</pre></td><td align="right" /></tr></table><p>Deletes <tt class="literal">directory</tt> if it is empty.</p></div>
ch18_01.htm:$sorted_array = rsort($array)</pre></td><td align="right" /></tr></table><p>Returns a sorted copy of the nonassociative array
ch18_01.htm:setcookie($name);</pre></td><td align="right" /></tr></table><p>setcookie($name, $value, $expire, $path, $domain, $secure);</p><p>Sends a cookie with the given attributes to the browser. If only
ch18_01.htm:seterrorreporting($value);</pre></td><td align="right" /></tr></table><p>If <tt class="literal">value</tt> is 0, all errors will be disabled,
ch18_01.htm:setlogging($value);</pre></td><td align="right" /></tr></table><p>If <tt class="literal">value</tt> is nonzero, access logging for the
ch18_01.htm:setshowinfo($value);</pre></td><td align="right" /></tr></table><p>If <tt class="literal">value</tt> is nonzero, an informational footer will
ch18_01.htm:settype($variable, $type);</pre></td><td align="right" /></tr></table><p>Sets the type of <tt class="literal">variable</tt> to
ch18_01.htm:$value = shl($number, $b);</pre></td><td align="right" /></tr></table><p>Returns the value of <tt class="literal">number</tt> shifted
ch18_01.htm:$value = shr($number, $b);</pre></td><td align="right" /></tr></table><p>Returns the value of <tt class="literal">number</tt> shifted
ch18_01.htm:$value = sin($number);</pre></td><td align="right" /></tr></table><p>Returns the sine of <tt class="literal">number</tt> (in radians).</p></div>
ch18_01.htm:sleep($seconds);</pre></td><td align="right" /></tr></table><p>Stops the processing of the page for <tt class="literal">seconds</tt>
ch18_01.htm:$sorted_array = sort($array)</pre></td><td align="right" /></tr></table><p>Returns a sorted copy of the nonassociative array
ch18_01.htm:$soundex_key = soundex($string);</pre></td><td align="right" /></tr></table><p>Returns the soundex key of <tt class="literal">string</tt>.</p></div>
ch18_01.htm:$string = sprintf($format, $arg, [$arg, $arg, ...]);</pre></td><td align="right" /></tr></table><p>Returns format with each C <tt class="literal">printf-</tt>style variable
ch18_01.htm:$value = sqrt($number);</pre></td><td align="right" /></tr></table><p>Returns the square root of <tt class="literal">number</tt>.</p></div>
ch18_01.htm:srand($integer);</pre></td><td align="right" /></tr></table><p>Seeds the random number generator with the value
ch18_01.htm:strstr</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table><p>$substring = strchr($string, $value);</p><p>$substring = strstr($string, $value);</p><p>Returns the portion of <tt class="literal">string</tt> that occurs starting
ch18_01.htm:strtr($string, $set1, $set2);</pre></td><td align="right" /></tr></table><p>Translates all characters in <tt class="literal">string</tt> that are in
ch18_01.htm:$plain_string = stripslashes($escaped_string);</pre></td><td align="right" /></tr></table><p>Removes all escape characters from <tt class="literal">escaped_string</tt>.</p></div>
ch18_01.htm:$length = strlen($string);</pre></td><td align="right" /></tr></table><p>Returns the length of <tt class="literal">string</tt>.</p></div>
ch18_01.htm:$substring = strrchr($string, $character);</pre></td><td align="right" /></tr></table><p>Searches string backwards for character. The function returns the
ch18_01.htm:$substring = strtok($string, $characters);</pre></td><td align="right" /></tr></table><p>$substring = strtok($characters);</p><p>Splits <tt class="literal">string</tt> up into substrings using any of the
ch18_01.htm:$lc_string = strtolower($string);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">string</tt> with all characters converted to
ch18_01.htm:$uc_string = strtoupper($string);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">string</tt> with all characters converted to
ch18_01.htm:$string = strval($variable);</pre></td><td align="right" /></tr></table><p>Returns <tt class="literal">variable</tt> as a string value.</p></div>
ch18_01.htm:$substring = substr($string, $start, $length);</pre></td><td align="right" /></tr></table><p>Returns the portion of <tt class="literal">string</tt> that begins at
ch18_01.htm:symlink($target, $filename);</pre></td><td align="right" /></tr></table><p>Creates a symbolic link from <tt class="literal">filename</tt> to
ch18_01.htm:syslog($level, $message);</pre></td><td align="right" /></tr></table><p>Logs <tt class="literal">message</tt> to the system logs at the level
ch18_01.htm:$results = system($command, $return_value);</pre></td><td align="right" /></tr></table><p>Executes the external command <tt class="literal">command</tt> and returns
ch18_01.htm:$value = tan($number);</pre></td><td align="right" /></tr></table><p>Returns the tangent of <tt class="literal">number</tt> (in radians).</p></div>
ch18_01.htm:$filename = tempnam($path, $prefix);</pre></td><td align="right" /></tr></table><p>Returns a filename, prepended with <tt class="literal">prefix</tt>, that
ch18_01.htm:$time = time();</pre></td><td align="right" /></tr></table><p>Returns the current time in Unix standard time format (the number of
ch18_01.htm:umask($umask);</pre></td><td align="right" /></tr></table><p>Returns the current umask if no argument is specified. Sets the umask
ch18_01.htm:$result = uniqid();</pre></td><td align="right" /></tr></table><p>Returns a value that is guaranteed to be unique compared to other
ch18_01.htm:unlink($filename);</pre></td><td align="right" /></tr></table><p>Deletes the specified file.</p></div>
ch18_01.htm:unset($variable);</pre></td><td align="right" /></tr></table><p>Undefines the specified variable, which may be an element of an
ch18_01.htm:$decoded_string = urldecode($string);</pre></td><td align="right" /></tr></table><p>Returns a copy of string that has all URL escape codes translated
ch18_01.htm:$encoded_string = urlencode($string);</pre></td><td align="right" /></tr></table><p>Returns a copy of string that has all special characters URL encoded.</p></div>
ch18_01.htm:usleep($ms);</pre></td><td align="right" /></tr></table><p>Stops the parsing of the script for <tt class="literal">ms</tt>
ch18_01.htm:virtual($filename);</pre></td><td align="right" /></tr></table><p>Includes <tt class="literal">filename</tt> exactly as if the tag
ch18_02.htm:$result = chdir($path)</pre></td><td align="right" /></tr></table><p>Changes directory to the specified path. If the operation is
ch18_02.htm:$result = chmod($filename, $mode)</pre></td><td align="right" /></tr></table><p>Changes the mode of the specified file to <tt class="literal">mode</tt>. If
ch18_02.htm:$string = chop($string)</pre></td><td align="right" /></tr></table><p>Returns the string with the last character removed. This is handy for
ch18_02.htm:close ($fd)</pre></td><td align="right" /></tr></table><p>Closes the file associated with the file descriptor.</p></div>
ch18_02.htm:$time = ctime($time)</pre></td><td align="right" /></tr></table><p>Converts <tt class="literal">time</tt>, which is some number of seconds
ch18_02.htm:FM-Command&gt;echo($string)</pre></td><td align="right" /></tr></table><p>Prints the given string. Any variables in the string will be replaced
ch18_02.htm:fprintf($fd, $string [, arg ...])</pre></td><td align="right" /></tr></table><p>Works like the C (or Perl) function of the same name. The first
ch18_02.htm:$hostinfo = gethostbyaddr($address) </pre></td><td align="right" /></tr></table><p>Returns the same array as <tt class="literal">gethostbyname() </tt>for
ch18_02.htm:$hostinfo = gethostbyname($host) </pre></td><td align="right" /></tr></table><p>Returns an array of information about the given host. The first
ch18_02.htm:$pid = getpid()</pre></td><td align="right" /></tr></table><p>Returns the process ID of the Lite program.</p></div>
ch18_02.htm:$entry = getpwnam($username)</pre></td><td align="right" /></tr></table><p>Returns an array of information about the user with the username
ch18_02.htm:$entry = getpwuid($UID)</pre></td><td align="right" /></tr></table><p>Returns an array identical to that of <tt class="literal">getpwnam</tt> for
ch18_02.htm:includeFile($filename)</pre></td><td align="right" /></tr></table><p>This function includes the file <tt class="literal">filename</tt> into the
ch18_02.htm:$result = kill($pid, $signal)</pre></td><td align="right" /></tr></table><p>Sends the signal <tt class="literal">signal</tt> to the process
ch18_02.htm:$result = link($file, $newlinkname)</pre></td><td align="right" /></tr></table><p>Creates a `hard' link from <tt class="literal">file</tt> to
ch18_02.htm:$result = mkdir($directoryname)</pre></td><td align="right" /></tr></table><p>Creates a directory with the given name. If the operation is
ch18_02.htm:$socket = msqlConnect($host)</pre></td><td align="right" /></tr></table><p>Connects to the mSQL server on the host <tt class="literal">host</tt>. The
ch18_02.htm:msqlClose($socket) </pre></td><td align="right" /></tr></table><p>Terminates the connection identified by <tt class="literal">socket</tt>.</p></div>
ch18_02.htm:msqlDataSeek($result, $location)</pre></td><td align="right" /></tr></table><p>This places the `pointer' for <tt class="literal">result</tt>
ch18_02.htm:$string = msqlEncode($string)</pre></td><td align="right" /></tr></table><p>This function returns a copy of <tt class="literal">string</tt> that is
ch18_02.htm:$row = msqlFetchRow($result)</pre></td><td align="right" /></tr></table><p>This function returns the next row of available data in
ch18_02.htm:msqlFieldSeek($result, $location)</pre></td><td align="right" /></tr></table><p>This changes the `pointer' of a result generated by
ch18_02.htm:msqlFreeResult($result)</pre></td><td align="right" /></tr></table><p>This frees any memory used by a result retrieved with
ch18_02.htm:$result = msqlInitFieldList($socket, $database, $table)</pre></td><td align="right" /></tr></table><p>This creates a table of information about the table
ch18_02.htm:$databases = msqlListDBs($socket)</pre></td><td align="right" /></tr></table><p>Returns an array of the names of all of the databases available on
ch18_02.htm:$tableinfo = msqlListField($result)</pre></td><td align="right" /></tr></table><p>Returns an array of information about the next field in the table
ch18_02.htm:$tables = msqlListTables($socket, $database)</pre></td><td align="right" /></tr></table><p>Returns an array of the names of the tables available on
ch18_02.htm:msqlNumRows($result)</pre></td><td align="right" /></tr></table><p>Returns the number of rows of data contained in the result
ch18_02.htm:$result = msqlQuery($socket, $query)</pre></td><td align="right" /></tr></table><p>This attempts to send to query <tt class="literal">query</tt> to the
ch18_02.htm:$result = msqlSelectDB($socket, $database)</pre></td><td align="right" /></tr></table><p>This function attempts to set the connection
ch18_02.htm:$result = msqlStoreResult</pre></td><td align="right" /></tr></table><p>Retrieves any data that was produced by the last
ch18_02.htm:$fd = open($file, $mode)</pre></td><td align="right" /></tr></table><p>This function opens the given file using the given mode and
ch18_02.htm:$pid = getppid()</pre></td><td align="right" /></tr></table><p>Returns the process ID of the process that is the parent of the Lite
ch18_02.htm:printf($string [, arg, ... ])</pre></td><td align="right" /></tr></table><p>This works like the C (or Perl) function of the same name. Variables
ch18_02.htm:$data = read($fd, $length)</pre></td><td align="right" /></tr></table><p>Read <tt class="literal">length</tt> number of bytes from the specified
ch18_02.htm:$line = readln($fd)</pre></td><td align="right" /></tr></table><p>Read the next line from the specified file descriptor.</p></div>
ch18_02.htm:$data = readtok($fd, $token)</pre></td><td align="right" /></tr></table><p>Read data from the specified file descriptor until the token is
ch18_02.htm:$result = rename($oldname, $newname)</pre></td><td align="right" /></tr></table><p>This attempts to rename of the specified file (or directory) from
ch18_02.htm:$result = rmdir($path)</pre></td><td align="right" /></tr></table><p>This attempts to remove the given directory. If the operation is
ch18_02.htm:setContentType($string)</pre></td><td align="right" /></tr></table><p>This function overrides the default content type of HTML page
ch18_02.htm:sleep($time)</pre></td><td align="right" /></tr></table><p>This stops the program for <tt class="literal">time</tt> number of seconds.</p></div>
ch18_02.htm:$strings = split($string, $token)</pre></td><td align="right" /></tr></table><p>Splits the given string by the token character into an array of
ch18_02.htm:$stat = stat($file)</pre></td><td align="right" /></tr></table><p>Returns an array of information about <tt class="literal">file</tt>. The
ch18_02.htm:$time = strftime($format, $time)</pre></td><td align="right" /></tr></table><p>This converts a Unix time into a text representation of the time
ch18_02.htm:$string = strseg($string, $start, $end)</pre></td><td align="right" /></tr></table><p>Returns the substring of the given string which starts at
ch18_02.htm:$string = sub($string, $expr1, $expr2)</pre></td><td align="right" /></tr></table><p>This substitutes any occurrences of <tt class="literal">expr1</tt> in
ch18_02.htm:$string = substr($string1, $regexp, $string2)</pre></td><td align="right" /></tr></table><p>This finds the substrings of <tt class="literal">string1</tt> that match
ch18_02.htm:$result = symlink($file, $newlinkname)</pre></td><td align="right" /></tr></table><p>This attempts to create a symbolic link from <tt class="literal">file</tt>
ch18_02.htm:$result = system($command)</pre></td><td align="right" /></tr></table><p>This function spawns a shell and executes <tt class="literal">command</tt>.
ch18_02.htm:$result = test($test, $filename)</pre></td><td align="right" /></tr></table><p>This performs the test <tt class="literal">test</tt> on the file
ch18_02.htm:$time = time()</pre></td><td align="right" /></tr></table><p>Returns the number of seconds since the epoch (00:00:00 GMT, Jan. 1,
ch18_02.htm:$time = time2unixtime($sec, $min, $hour, $day, $month, $year)</pre></td><td align="right" /></tr></table><p>This converts the values for a time into the Unix form of the time
ch18_02.htm:$string = tr($string, $list1, $list2)</pre></td><td align="right" /></tr></table><p>Substitutes all of the characters in <tt class="literal">list1</tt> that
ch18_02.htm:$result = truncate($file, $length)</pre></td><td align="right" /></tr></table><p>This attempts to truncate the given file to <tt class="literal">length</tt>
ch18_02.htm:umask($mask)</pre></td><td align="right" /></tr></table><p>This sets the umask of the current process to
ch18_02.htm:$sec = unixtime2sec($time)</pre></td><td align="right" /></tr></table><p>These functions take a Unix time value and return the requested
ch18_02.htm:$result = unlink("filename")</pre></td><td align="right" /></tr></table><p>This deletes the specified file. If the operation is unsuccessful, a
ch18_02.htm:$string = urlEncode($string)</pre></td><td align="right" /></tr></table><p>This function returns a copy of <tt class="literal">string</tt> that is
ch19_01.htm:<a name="INDEX-1842" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_affected_rows</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>my_ulonglong mysql_affected_rows(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Returns the number of rows affected by the most recent query. When
ch19_01.htm:<a name="INDEX-1843" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_close</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>void mysql_close(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Ends a connection to the database server. If there is a problem when
ch19_01.htm:<a name="INDEX-1844" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_connect</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL *mysql_connect(MYSQL *mysql, const char *host, const char *user, const char *passwd)</pre></td><td align="right" /></tr></table><p>Creates a connection to a MySQL database server. The first parameter
ch19_01.htm:<a name="INDEX-1845" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_create_db</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int mysql_create_db(MYSQL *mysql, const char *db)</pre></td><td align="right" /></tr></table><p>Creates an entirely new database with the given name. The return
ch19_01.htm:<a name="INDEX-1846" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_data_seek</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>void mysql_data_seek(MYSQL_RES *res, unsigned int offset)</pre></td><td align="right" /></tr></table><p>Moves to a specific row in a group a results. The first argument is
ch19_01.htm:<a name="INDEX-1847" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_debug</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>mysql_debug(char *debug)</pre></td><td align="right" /></tr></table><p>Manipulates the debugging functions if the client has been compiled
ch19_01.htm:<a name="INDEX-1848" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_drop_db</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int mysql_drop_db(MYSQL *mysql, const char *db)</pre></td><td align="right" /></tr></table><p>Destroys the database with the given name. The return value is zero
ch19_01.htm:<a name="INDEX-1849" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_dump_debug_info</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int mysql_dump_debug_info(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>This function causes the database server to enter debugging
ch19_01.htm:<a name="INDEX-1850" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_eof</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>my_bool mysql_eof(MYSQL_RES *result)</pre></td><td align="right" /></tr></table><p>Returns a nonzero value if there is no more data in the group of
ch19_01.htm:<a name="INDEX-1851" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_errno</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>unsigned int mysql_errno(MYSQL *mysql) </pre></td><td align="right" /></tr></table><p>Returns the error number of the last error associated with the
ch19_01.htm:<a name="INDEX-1852" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_error</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>char *mysql_error(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Returns the error message of the last error associated with the
ch19_01.htm:</pre></td><td align="right" /></tr></table><p>Encodes a string so that it is safe to insert it into a MySQL table.
ch19_01.htm:<a name="INDEX-1854" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_fetch_field</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL_FIELD *mysql_fetch_field(MYSQL_RES *result)</pre></td><td align="right" /></tr></table><p>Returns a <tt class="literal">MYSQL_FIELD</tt> structure describing the
ch19_01.htm:</pre></td><td align="right" /></tr></table><p>This function is the same as <tt class="literal">mysql_fetch_field</tt>,
ch19_01.htm:<a name="INDEX-1856" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_fetch_fields</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL_FIELD *mysql_fetch_fields(MYSQL_RES * result)</pre></td><td align="right" /></tr></table><p>The function is the same as <tt class="literal">mysql_fetch_field</tt>,
ch19_01.htm:<a name="INDEX-1857" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_fetch_lengths</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>unsigned long *mysql_fetch_lengths(MYSQL_RES *result)</pre></td><td align="right" /></tr></table><p>Returns an array of the lengths of each field in the current row. A
ch19_01.htm:<a name="INDEX-1858" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_fetch_row</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL_ROW mysql_fetch_row(MYSQL_RES *result)</pre></td><td align="right" /></tr></table><p>Retrieves the next row of the result and returns it as a
ch19_01.htm:</pre></td><td align="right" /></tr></table><p>Seeks to the given field of the current row of the result set. The
ch19_01.htm:<a name="INDEX-1860" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_field_tell</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL_FIELD_OFFSET mysql_field_tell(MYSQL_RES *result)</pre></td><td align="right" /></tr></table><p>Returns the value of the current field position within the current
ch19_01.htm:<a name="INDEX-1861" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_free_result</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>void mysql_free_result(MYSQL_RES *result) </pre></td><td align="right" /></tr></table><p>Frees the memory associated with a <tt class="literal">MYSQL_RES</tt>
ch19_01.htm:<a name="INDEX-1862" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_get_client_info</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>char *mysql_get_client_info(void)</pre></td><td align="right" /></tr></table><p>Returns a string with the MySQL library version used by the client
ch19_01.htm:<a name="INDEX-1863" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_get_host_info</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>char *mysql_get_host_info(MYSQL *mysql) </pre></td><td align="right" /></tr></table><p>Returns a string with the hostname of the MySQL database server and
ch19_01.htm:<a name="INDEX-1864" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_get_proto_info</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>unsigned int mysql_get_proto_info(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Returns the MySQL protocol version used in the current connection as
ch19_01.htm:<a name="INDEX-1865" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_get_server_info</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>char *mysql_get_server_info(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Returns a string with the version number of the MySQL database server
ch19_01.htm:<a name="INDEX-1866" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_info</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>char *mysql_info(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Returns a string containing information about the most recent query,
ch19_01.htm:<a name="INDEX-1867" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_init</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL *mysql_init(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Initializes a <tt class="literal">MYSQL</tt> structure used to create a
ch19_01.htm:<a name="INDEX-1868" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_insert_id</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>my_ulonglong mysql_insert_id(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Returns the last number generated for an
ch19_01.htm:<a name="INDEX-1869" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_kill</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int mysql_kill(MYSQL *mysql, unsigned long pid) </pre></td><td align="right" /></tr></table><p>Attempts to kill the MySQL server thread with the specified Process
ch19_01.htm:<a name="INDEX-1870" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_list_dbs</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL_RES *mysql_list_dbs(MYSQL *mysql, const char *wild)</pre></td><td align="right" /></tr></table><p>Returns a <tt class="literal">MYSQL_RES</tt> structure containing the names
ch19_01.htm:</pre></td><td align="right" /></tr></table><p>Returns a <tt class="literal">MYSQL_RES</tt> structure containing the names
ch19_01.htm:<a name="INDEX-1872" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_list_processes</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL_RES *mysql_list_processes(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Returns a <tt class="literal">MYSQL_RES</tt> structure containing the
ch19_01.htm:<a name="INDEX-1873" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_list_tables</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL_RES *mysql_list_tables(MYSQL *mysql, const char *wild)</pre></td><td align="right" /></tr></table><p>Returns a <tt class="literal">MYSQL_RES</tt> structure containing the names
ch19_01.htm:<a name="INDEX-1874" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_num_fields</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>unsigned int mysql_num_fields(MYSQL_RES *result)</pre></td><td align="right" /></tr></table><p>Returns the number of fields contained in each row of the given
ch19_01.htm:<a name="INDEX-1875" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_num_rows</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int mysql_num_rows(MYSQL_RES *result)</pre></td><td align="right" /></tr></table><p>Returns the number of rows of data in the result set. This function
ch19_01.htm:<a name="INDEX-1876" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_ping</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int mysql_ping(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Checks to see if the connection to the MySQL server is still alive.
ch19_01.htm:<a name="INDEX-1877" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_query</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int mysql_query(MYSQL *mysql, const char *query)</pre></td><td align="right" /></tr></table><p>Executes the SQL query given in the second argument. If the query
ch19_01.htm:</pre></td><td align="right" /></tr></table><p>Creates a connection with a MySQL database server. There are eight
ch19_01.htm:</pre></td><td align="right" /></tr></table><p>Executes the SQL query given in the second argument. The length of
ch19_01.htm:<a name="INDEX-1880" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_reload</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int mysql_reload(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Reloads the permission tables on the MySQL database server. You must
ch19_01.htm:<a name="INDEX-1881" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_row_tell</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>unsigned int mysql_row_tell(MYSQL_RES *result)</pre></td><td align="right" /></tr></table><p>Returns the value of the cursor used as
ch19_01.htm:<a name="INDEX-1882" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_select_db</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int mysql_select_db(MYSQL *mysql, const char *db)</pre></td><td align="right" /></tr></table><p>Changes the current database. The user must have permission to access
ch19_01.htm:<a name="INDEX-1883" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_shutdown</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int mysql_shutdown(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Shutdown the MySQL database server. The user must have Shutdown
ch19_01.htm:<a name="INDEX-1884" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_stat</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>char *mysql_stat(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Returns information about the current operating status of the
ch19_01.htm:<a name="INDEX-1885" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_store_result</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL_RES *mysql_store_result(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Reads the entire result of a query and stores in a
ch19_01.htm:<a name="INDEX-1886" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_thread_id</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>unsigned long mysql_thread_id(MYSQL * mysql)</pre></td><td align="right" /></tr></table><p>Returns the thread ID of the current connection. This value can be
ch19_01.htm:<a name="INDEX-1887" /><a name="INDEX-1888" /><a name="INDEX-1889" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>mysql_use_result</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>MYSQL_RES *mysql_use_result(MYSQL *mysql)</pre></td><td align="right" /></tr></table><p>Reads the result of a query row by row and allows access to the data
ch19_02.htm:<a name="INDEX-1894" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlConnect</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int msqlConnect ( char *host ) </pre></td><td align="right" /></tr></table><p>Creates a connection to the mSQL server whose hostname or IP address
ch19_02.htm:<a name="INDEX-1895" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlSelectDB</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int msqlSelectDB ( int sock , char *dbName ) </pre></td><td align="right" /></tr></table><p>Chooses a database for the specified connection. A database must be
ch19_02.htm:<a name="INDEX-1896" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlQuery</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int msqlQuery( int sock , char *query )</pre></td><td align="right" /></tr></table><p>Executes the given SQL query. In mSQL 2, the return value is the
ch19_02.htm:<a name="INDEX-1897" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlStoreResult</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>m_result *msqlStoreResult()</pre></td><td align="right" /></tr></table><p>Stores the result of a <tt class="literal">SELECT</tt> query. This function
ch19_02.htm:<a name="INDEX-1898" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlFreeResult</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>void msqlFreeResult ( m_result *result )</pre></td><td align="right" /></tr></table><p>Frees the memory associated with an <tt class="literal">m_result</tt>
ch19_02.htm:<a name="INDEX-1899" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlFetchRow</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>m_row msqlFetchRow ( m_result *result ) </pre></td><td align="right" /></tr></table><p>Retrieves a single row of data from a result set. This data is placed
ch19_02.htm:<a name="INDEX-1900" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlDataSeek</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>void msqlDataSeek ( m_result *result, int pos )</pre></td><td align="right" /></tr></table><p>Sets the cursor that tells <tt class="literal">msqlFetchRow</tt> which row
ch19_02.htm:<a name="INDEX-1901" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlNumRows</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int msqlNumRows ( m_result *result )</pre></td><td align="right" /></tr></table><p>Returns the number of rows in the result set.</p>
ch19_02.htm:<a name="INDEX-1902" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlFetchField</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>m_field *msqlFetchField ( m_result *result )</pre></td><td align="right" /></tr></table><p>Returns the information about the fields in the result set. Each
ch19_02.htm:<a name="INDEX-1903" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlFieldSeek</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>void msqlFieldSeek ( m_result *result , int pos )</pre></td><td align="right" /></tr></table><p>Sets the cursor that tells <tt class="literal">msqlFetchField</tt> which
ch19_02.htm:<a name="INDEX-1904" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlNumFields</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int msqlNumFields ( m_result *result )</pre></td><td align="right" /></tr></table><p>Returns the number of fields in the result set.</p>
ch19_02.htm:<a name="INDEX-1905" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlClose</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>int msqlClose ( int sock )</pre></td><td align="right" /></tr></table><p>Closes the connection to the mSQL database server.</p>
ch19_02.htm:<a name="INDEX-1906" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlListDBs</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>m_result *msqlListDBs ( int sock )</pre></td><td align="right" /></tr></table><p>Returns an <tt class="literal">m_result</tt> structure containing the names
ch19_02.htm:<a name="INDEX-1907" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlListTables</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>m_result *msqlListTables ( int sock )</pre></td><td align="right" /></tr></table><p>Returns an <tt class="literal">m_result</tt> structure containing the names
ch19_02.htm:<a name="INDEX-1908" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlListFields</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>m_result *msqlListFields ( int sock , char *tableName )</pre></td><td align="right" /></tr></table><p>Returns an <tt class="literal">m_result</tt> structure containing the names
ch19_02.htm:<a name="INDEX-1909" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>msqlListIndex</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>m_result *msqlListIndex ( int sock , char *tableName , char *index )</pre></td><td align="right" /></tr></table><p>Returns an <tt class="literal">m_result</tt> structure containing
ch21_02.htm:@available_drivers = DBI-&gt;available_drivers($quiet);</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::available_drivers</tt> returns a list of the
ch21_02.htm:</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::bind_col</tt> binds a column of a
ch21_02.htm:</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::bind_columns</tt> binds an entire list of scalar
ch21_02.htm:</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::bind_param</tt> substitutes real values for the
ch21_02.htm:</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::connect</tt> requires at least three arguments,
ch21_02.htm:<a name="INDEX-1952" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>DBI::data_sources</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@data_sources = DBI-&gt;data_sources($dbd_driver);</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::data_sources</tt> takes the name of a DBD module
ch21_02.htm:$rows_affected  = $db-&gt;do($statement, \%unused, @bind_values);</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::do</tt> directly performs a
ch21_02.htm:<a name="INDEX-1954" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>DBI::disconnect</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$result  = $db-&gt;disconnect;</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::disconnect</tt> disconnects the database handle
ch21_02.htm:             $field_sep, $file_handle);</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::dump_results</tt> prints the contents of a
ch21_02.htm:<a name="INDEX-1956" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>$DBI::err</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$error_code  = $handle-&gt;err;</pre></td><td align="right" /></tr></table><p><tt class="literal">$DBI::err </tt>returns the error code for the last DBI
ch21_02.htm:<a name="INDEX-1957" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>$DBI::errstr</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$error = $handle-&gt;errstr;</pre></td><td align="right" /></tr></table><p><tt class="literal">$DBI::errstr</tt> returns the error message for the
ch21_02.htm:$rows_affected = $statement_handle-&gt;execute(@bind_values);</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::execute</tt> executes the SQL statement held in
ch21_02.htm:<a name="INDEX-1959" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>DBI::fetchall_arrayref</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$ref_of_array_of_arrays = $statement_handle-&gt;fetchall_arrayref;</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::fetchall_arrayref</tt> returns all of the
ch21_02.htm:<a name="INDEX-1960" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>DBI::fetchrow_array</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@row_of_data = $statement_handle-&gt;fetchrow;</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::fetchrow</tt> returns the next row of data from a
ch21_02.htm:$array_reference = $statement_handle-&gt;fetch;</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI:: fetchrow_arrayref</tt> and its alias,
ch21_02.htm:<a name="INDEX-1964" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>DBI::fetchrow_hashref</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$hash_reference = $statement_handle-&gt;fetchrow_hashref;</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::fetchrow_hashref</tt> works exactly like
ch21_02.htm:<a name="INDEX-1965" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>DBI::finish</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$result = $statement_handle-&gt;finish;</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::finish</tt> releases all data in the statement
ch21_02.htm:</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::func</tt> calls specialized nonportable functions
ch21_02.htm:$neat_string = DBI::neat($string, $maxlen);</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::neat</tt> takes as its arguments a string and an
ch21_02.htm:$neat_string = DBI::neat_list(\@listref, $maxlen, $field_seperator);</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::neat_list</tt> takes three arguments and returns a
ch21_02.htm:$statement_handle = $db-&gt;prepare($statement, \%unused);</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::prepare</tt> takes as its argument an SQL
ch21_02.htm:<a name="INDEX-1970" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>DBI::quote</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$quoted_string = $db-&gt;quote($string);</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::quote</tt> takes a string intended for use in an
ch21_02.htm:<a name="INDEX-1971" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>DBI::rows</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$number_of_rows = $statement_handle-&gt;rows;</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::rows</tt> returns the number of rows of data
ch21_02.htm:<a name="INDEX-1972" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>DBI::state</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$sql_error  = $handle-&gt;state;</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::state</tt> returns the <tt class="literal">SQLSTATE</tt>
ch21_02.htm:$handle-&gt;trace($trace_level, $trace_file);</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::trace</tt> is useful mostly for debugging
ch21_02.htm:$result = $db-&gt;ping;</pre></td><td align="right" /></tr></table><p><tt class="literal">DBI::commit</tt> and <tt class="literal">DBI::rollback</tt>
ch21_02.htm:$statement_handle-&gt;{type}</pre></td><td align="right" /></tr></table><p>The DBI.pm API defines several attributes that may be set or read at
ch21_03.htm:<a name="INDEX-1982" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::createdb</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$result = $db-&gt;createdb($database);</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::createdb</tt> takes as its argument the name of a
ch21_03.htm:<a name="INDEX-1983" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::database</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$database = $db-&gt;database;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::database</tt> returns the name of the current
ch21_03.htm:<a name="INDEX-1984" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::dropdb</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$result = $db-&gt;dropdb($database);</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::dropdb</tt> takes as its argument the name of a
ch21_03.htm:<a name="INDEX-1985" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::errmsg</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$error = $db-&gt;errmsg;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::errmsg</tt><b class="function"> </b> returns the last
ch21_03.htm:<a name="INDEX-1986" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::getsequenceinfo</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>($step, $value) = $db-&gt;getsequenceinfo($table);</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::getsequenceinfo</tt> takes the name of a table as
ch21_03.htm:<a name="INDEX-1987" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::host</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$host = $db-&gt;host;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::host</tt> returns the hostname of the database
ch21_03.htm:<a name="INDEX-1988" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::listdbs</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@databases = $db-&gt;listdbs;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::listdbs</tt> returns an
ch21_03.htm:<a name="INDEX-1989" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i> </i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$fields = $db-&gt;listfields($table);</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::listfields</tt> takes as an argument the name of
ch21_03.htm:<a name="INDEX-1990" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::listindex</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@index_handles = $db-&gt;listindex($table,$index);</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::listindex</tt> accepts the names of a table and
ch21_03.htm:<a name="INDEX-1991" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::listtables</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@tables = $db-&gt;listtables;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::listtables</tt><b class="function"> </b> returns an
ch21_03.htm:<a name="INDEX-1992" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::query</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$query_output = $db-&gt;query($sql_statement);</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::query</tt> is the most important and most
ch21_03.htm:<a name="INDEX-1993" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>$Msql::QUIET</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table><p>The <tt class="literal">$Msql::QUIET</tt> variable, when true, turns off
ch21_03.htm:$truncated_quoted_string = $db-&gt;quote($string,$length);</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::quote</tt> takes as its argument a scalar string.
ch21_03.htm:<a name="INDEX-1995" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::selectdb</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$db-&gt;selectdb($database);</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::selectdb</tt> selects a database from the
ch21_03.htm:<a name="INDEX-1996" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::shutdown</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$result = $db-&gt;shutdown;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::shutdown</tt> sends a shutdown command to the
ch21_03.htm:<a name="INDEX-1997" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::as_string</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$formatted_table = $statement_handle-&gt;as_string;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::as_string</tt> returns the data
ch21_03.htm:Msql::Statement::dataseek</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$statement_handle-&gt;dataseek($row_number);</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::dataseek</tt> takes the number of a
ch21_03.htm:<a name="INDEX-2001" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::fetchcol</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@column_of_data = $statement_handle-&gt;fetchcol($column_number);</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::fetchcol</tt> takes the number of a
ch21_03.htm:<tr><td align="left"><font size="+1"><b><i>Msql::Statement::fetchhash</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>%hash = $statement_handle-&gt;fetchhash;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::fetchhash</tt> 
ch21_03.htm:<a name="INDEX-2003" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::fetchrow</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@row_of_data = $statement_handle-&gt;fetchrow;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::fetchrow</tt> returns the next row of
ch21_03.htm:<a name="INDEX-2004" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::isnotnull</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@not_null  = $statement_handle-&gt;isnotnull;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::isnotnull</tt> returns a list of
ch21_03.htm:<a name="INDEX-2005" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::isnum</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@numbers  = $statement_handle-&gt;isnum;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::isnum</tt> returns a list of boolean
ch21_03.htm:<a name="INDEX-2006" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::isprikey</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@primary_key  = $statement_handle-&gt;isprikey;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::isprikey</tt> returns a list of
ch21_03.htm:<a name="INDEX-2007" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::length</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@lengths  = $statement_handle-&gt;length;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::length</tt> returns a list of the
ch21_03.htm:<a name="INDEX-2008" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::listindices</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@indices = $statement_handle-&gt;listindices;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::listindices</tt> returns the indices
ch21_03.htm:<a name="INDEX-2009" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::maxlength</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@max_lengths  = $statement_handle-&gt;maxlength;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::maxlength</tt> returns a list of the
ch21_03.htm:<a name="INDEX-2010" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::name</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@column_names  = $statement_handle-&gt;name;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::name</tt> returns the names of the
ch21_03.htm:<a name="INDEX-2011" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::numfields</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$number_of_fields = $statement_handle-&gt;numfields;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::numfields</tt> returns the number of
ch21_03.htm:<a name="INDEX-2012" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::numrows</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$number_of_rows = $statement_handle-&gt;numrows;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::numrows</tt> returns the number of
ch21_03.htm:<a name="INDEX-2013" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::table</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@tables  = $statement_handle-&gt;table;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::table</tt> returns a list of the
ch21_03.htm:<a name="INDEX-2014" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::Statement::type</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@column_types  = $statement_handle-&gt;type;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::type</tt> returns the types of the
ch21_03.htm:<a name="INDEX-2015" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Msql::sock</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$sock = $db-&gt;sock;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::sock </tt>returns a scalar containing the number
ch21_04.htm:<a name="INDEX-2019" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::connect</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$db = Mysql-&gt;connect($host, $database, $user, $password);</pre></td><td align="right" /></tr></table><p>In addition to the three connect methods that are identical to
ch21_04.htm:<a name="INDEX-2020" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::errno</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$error_number = $db-&gt;errno;</pre></td><td align="right" /></tr></table><p><tt class="literal">Mysql::errno</tt> returns the error number of the last
ch21_04.htm:<a name="INDEX-2022" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::Statement::affectedrows</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$number_of_affected_rows  = $statement_handle-&gt;affectedrows;</pre></td><td align="right" /></tr></table><p><tt class="literal">Msql::Statement::affectedrows</tt> returns the number
ch21_04.htm:<a name="INDEX-2023" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::Statement::info</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$info  = $sth-&gt;info;</pre></td><td align="right" /></tr></table><p><tt class="literal">Mysql::Statement::info</tt> returns extra results from
ch21_04.htm:<a name="INDEX-2024" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::Statement::insertid</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>$new_id  = $statement_handle-&gt;insertid;</pre></td><td align="right" /></tr></table><p><tt class="literal">Mysql::Statement::insertid</tt> returns the current
ch21_04.htm:<a name="INDEX-2025" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::Statement::isblob</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left"><pre>@blobs  = $statement_handle-&gt;isblob;</pre></td><td align="right" /></tr></table><p><tt class="literal">Mysql::Statement::isblob</tt> returns a list of boolean
ch21_04.htm:<a name="INDEX-2026" /><a name="INDEX-2027" /><div class="refentry"><table cellpadding="5" border="0" width="515"><tr><td align="left"><font size="+1"><b><i>Mysql::query</i></b></font></td><td align="right"><i /></td></tr></table><hr color="black" align="left" noshade="true" size="3" width="515" /><table cellpadding="5" border="0" width="515"><tr><td align="left" /><td align="right" /></tr></table><p>Unlike <em class="emphasis">Msql.pm</em>, <em class="emphasis">Mysql.pm</em>
