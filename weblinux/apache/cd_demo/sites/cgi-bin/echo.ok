#include <stdio.h>
#include <stdlib.h>

#define MAX_ENTRIES 10000

typedef struct 
{
    char *name;
    char *val;
} entry;

char *makeword(char *line, char stop);
char *fmakeword(FILE *f, char stop, int *len);
char x2c(char *what);
void unescape_url(char *url);
void plustospace(char *str);
int main(int argc, char *argv[]);

void write_log(char *m)
{
	FILE *f;
	f=fopen("echo_log","a");
	fprintf(f,"%s",m);
	fclose(f);
}

int main(int argc, char *argv[]) 
{
    entry entries[MAX_ENTRIES];
    register int x,m=0;
    int cl;
	char mbuf[200];
unlink("echo_log");	
write_log("echo 1");	
/*  printf("Content-type: text/html%c%c",10,10);*/
	  printf("Content-type: text/html\n\n");

sprintf(mbuf,"REQUEST_METHOD: %s\n",getenv("REQUEST_METHOD"));
write_log(mbuf);	

    if(strcmp(getenv("REQUEST_METHOD"),"POST")) 
	{
        printf("This script should be referenced with a METHOD of POST.\n");
        exit(1);
    }
write_log("echo 3");	
    if(strcmp(getenv("CONTENT_TYPE"),
                  "application/x-www-form-urlencoded")) 
	{
        printf("This script can only be used to decode form results. \n");
        exit(1);
    }
write_log("echo 4");	
    cl = atoi(getenv("CONTENT_LENGTH"));

write_log("echo 5");	
    for(x=0;cl && (!feof(stdin));x++) 
	{
        m=x;
        entries[x].val = fmakeword(stdin,'&',&cl);
        plustospace(entries[x].val);
        unescape_url(entries[x].val);
        entries[x].name = makeword(entries[x].val,'=');
    }

write_log("echo 6");	
    printf("<H1>Query Results</H1>");
    printf("You submitted the following name/value pairs:<p>%c",10);
    printf("<ul>%c",10);

write_log("echo 7");	
    for(x=0; x <= m; x++)
		{
        sprintf(mbuf,"<li> <code>%s = %s</code>%c",entries[x].name,
               entries[x].val,10);
		write_log(mbuf);
		printf("%s",mbuf);
		}

    printf("</ul>%c",10);
}


